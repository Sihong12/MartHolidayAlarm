buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
        querydslVersion = '4.2.1'
        swaggerVersion = '2.8.0'
        asciidoctorVersion = '1.5.3'
        restDocsVersion = '2.0.2.RELEASE'
        spockVersion = '1.3-groovy-2.5'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'com.hongsi'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-aop")

    compile("org.mariadb.jdbc:mariadb-java-client:2.2.3")
    compile("com.querydsl:querydsl-jpa:${querydslVersion}")
    compile("com.querydsl:querydsl-apt:${querydslVersion}")

    compile("org.jsoup:jsoup:1.10.2")
    compile("com.ibm.icu:icu4j:63.1")
    compile("com.google.firebase:firebase-admin:6.4.0")

    runtime("com.h2database:h2")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.spockframework:spock-core:${spockVersion}")
    testImplementation("org.spockframework:spock-spring:${spockVersion}")
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc:${restDocsVersion}")
    asciidoctor("org.springframework.restdocs:spring-restdocs-asciidoctor:${restDocsVersion}")

    // deprecated
    compile group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"
    compile group: 'io.springfox', name: 'springfox-core', version: "${swaggerVersion}"
}

// QueryDSL Configuration
def querydslSrcDir = file("src/main/generated")
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

clean.doLast {
    querydslSrcDir.deleteDir()
    println ">> Delete $querydslSrcDir"
}

// Rest Dos Configuration
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs/'
    }
}